#!/sbin/sh
#   _____ __________ _____ ____ _____ _________  
#  |     | _  |   __|   | |  __|_   _| _  | __ | 
#  | | | |    |  |  | | | |  __| | | |    |   -| 
#  |_|_|_|_|__|_____|_|___|____| |_| |_|__|_|__| 
#                           by Kyliekyler Â© 2019

#===========================================================================//
# GIVE PROPER CREDITS IF YOU USE THE PART OF IT IN YOUR WORK, THANKS!
#===========================================================================//

# INITIALIZATION ===========================================================//

umask 022

# GLOBAL VARIABLES =========================================================//
TMPDIR=/dev/tmp
PERSISTDIR=/sbin/.magisk/mirror/persist

rm -rf $TMPDIR 2>/dev/null
mkdir -p $TMPDIR

# ECHO BEFORE LOADING UTIL_FUNCTIONS =======================================//
ui_print() { echo "$1"; }

require_new_magisk() {
  ui_print "- PLEASE INSTALL MAGISK V19.0+!"
  exit 1
}

is_legacy_script() {
  unzip -l "$ZIPFILE" M4GN3T4R_install.sh | grep -q M4GN3T4R_install.sh
  return $?
}

print_modname() {
  ui_print " "
  ui_print "- SETTING UP ENVIRONMENT..."
}

# ENVIRONMENT ==============================================================//

OUTFD=$2
ZIPFILE=$3

mount /data 2>/dev/null

# LOAD UTIL FUNCTIONS ======================================================//
[ -f /data/adb/magisk/util_functions.sh ] || require_new_magisk
. /data/adb/magisk/util_functions.sh
[ $MAGISK_VER_CODE -gt 18100 ] || require_new_magisk

# PREP FLASH ===============================================================//
setup_flashable

# MOUNT PARTITIONS =========================================================//
mount_partitions

# DETECT VER AND ARCH ======================================================//
api_level_arch_detect

# SETUP BUSYBOX AND BINARIES ===============================================//
$BOOTMODE && boot_actions || recovery_actions

# PREPARATION ==============================================================//

# EXTRACT MODULE PROP ======================================================//
unzip -o "$ZIPFILE" module.prop -d $TMPDIR >&2
[ ! -f $TMPDIR/module.prop ] && abort "- UNABLE TO EXTRACT ZIP FILE!"

$BOOTMODE && MODDIRNAME=modules_update || MODDIRNAME=modules
MODULEROOT=$NVBASE/$MODDIRNAME
MODID=M4GN3T4R
MODPATH=$MODULEROOT/$MODID
MODNAME=`grep_prop name $TMPDIR/module.prop`

# CREATE MODPATH ===========================================================//
rm -rf $MODPATH 2>/dev/null
mkdir -p $MODPATH

# INSTALL ==================================================================//

if is_legacy_script; then
  unzip -oj "$ZIPFILE" module.prop M4GN3T4R_INSTALL.sh uninstall.sh '.M4GN3T4R/*' -d $TMPDIR >&2

  # LOAD INSTALL SCRIPT ====================================================//
  . $TMPDIR/M4GN3T4R_install.sh

  # CALLBACKS ==============================================================//
  print_modname
  on_install

  # CUSTOM UNINSTALLER =====================================================//
  [ -f $TMPDIR/uninstall.sh ] && cp -af $TMPDIR/uninstall.sh $MODPATH/uninstall.sh

  # SKIP MOUNT =============================================================//
  $SKIPMOUNT && touch $MODPATH/skip_mount

  # MODULE INFO ============================================================//
  cp -af $TMPDIR/module.prop $MODPATH/module.prop
  
  # SERVICE SCRIPT =========================================================//
  $LATESTARTSERVICE && cp -af $TMPDIR/service.sh $MODPATH/service.sh
  
  ui_print " "
  ui_print "- SETTING PERMISSIONS..."
  set_permissions
  ui_print "  DONE"
else
  print_modname

  unzip -o "$ZIPFILE" M4GN3T4R.sh -d $MODPATH >&2

  if ! grep -q '^SKIPUNZIP=1$' $MODPATH/M4GN3T4R.sh 2>/dev/null; then
    ui_print " "
    ui_print "- EXTRACTING MODULE FILES"
    unzip -o "$ZIPFILE" -x 'META-INF/*' -d $MODPATH >&2

    # DEFAULT PERMISSION ===================================================//
    set_perm_recursive $MODPATH 0 0 0755 0644
  fi

  # LOAD CUSTOM SCRIPT =====================================================//
  [ -f $MODPATH/M4GN3T4R.sh ] && . $MODPATH/M4GN3T4R.sh
fi

if $BOOTMODE; then
  # UPDATE MAGISK INFO =====================================================//
  mktouch $NVBASE/modules/$MODID/update
  cp -af $MODPATH/module.prop $NVBASE/modules/$MODID/module.prop
fi

# REMOVE STUFFS ============================================================//
rm -rf \
$MODPATH/LICENSE $MODPATH/M4GN3T4R.sh \
$MODPATH/README.md $MODPATH/.git* 2>/dev/null

# FINALIZING ===============================================================//

cd /
$BOOTMODE || recovery_cleanup
rm -rf $TMPDIR

exit 0
