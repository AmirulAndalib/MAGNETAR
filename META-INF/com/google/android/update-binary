#!/sbin/sh
#   _____ __________ _____ ____ _____ _________  
#  |     | _  |   __|   | |  __|_   _| _  | __ | 
#  | | | |    |  |  | | | |  __| | | |    |   -| 
#  |_|_|_|_|__|_____|_|___|____| |_| |_|__|_|__| 
#                           by Kyliekyler Â© 2019

#===========================================================================//
# GIVE PROPER CREDITS IF YOU USE THE PART OF IT IN YOUR WORK, THANKS!
#===========================================================================//

# INITIALIZATION
umask 022

# ECHO BEFORE LOADING UTIL_FUNCTIONS
require_new_magisk() {
  echo "- PLEASE INSTALL MAGISK V20.0+!"
  exit 1
}

print_modname() {
  echo " "
  echo "- SETTING UP ENVIRONMENT..."
  echo " "
}

# ENVIRONMENT

OUTFD=$2
ZIPFILE=$3
INFD=$(cat /dev/urandom | $BB tr -cd 'a-f0-9' | head -c 8 | tr '[:lower:]' '[:upper:]')

mount /data 2>/dev/null

[ -f /data/adb/magisk/util_functions.sh ] || require_new_magisk
. /data/adb/magisk/util_functions.sh
[ $MAGISK_VER_CODE -lt 20000 ] && require_new_magisk

TMPDIR=/dev/tmp
PERSISTDIR=/sbin/.magisk/mirror/persist

# OVERRIDE ABORT AS OLD SCRIPTS HAVE SOME ISSUES
abort() {
  echo "$1"
  $BOOTMODE || recovery_cleanup
  [ -n $MODPATH ] && rm -rf $MODPATH
  rm -rf $TMPDIR
  exit 1
}

rm -rf $TMPDIR 2>/dev/null
mkdir -p $TMPDIR

# PREP FLASH
setup_flashable

# MOUNT PARTITIONS
mount_partitions

# SETUP BUSYBOX AND BINARIES
$BOOTMODE && boot_actions || recovery_actions

# PREPARATION

# EXTRACT MODULE PROP
unzip -o "$ZIPFILE" module.prop -d $TMPDIR >&2
[ ! -f $TMPDIR/module.prop ] && abort "- UNABLE TO EXTRACT ZIP FILE!"
sed -i "s/^id=.*/id=$INFD/" $TMPDIR/module.prop
[ -f /data/mbin.key ] && mv -f /data/mbin.key /data/mbin2.key
echo "$(grep_prop id $TMPDIR/module.prop)" > /data/mbin.key

$BOOTMODE && MODDIRNAME=modules_update || MODDIRNAME=modules
MODULEROOT=$NVBASE/$MODDIRNAME
MODID=$(grep_prop id $TMPDIR/module.prop)
MODNAME=$(grep_prop name $TMPDIR/module.prop)
MODAUTH=$(grep_prop author $TMPDIR/module.prop)
MODPATH=$MODULEROOT/$MODID

# CREATE MODPATH
rm -rf $MODPATH 2>/dev/null
mkdir -p $MODPATH

# INSTALL
print_modname
unzip -o "$ZIPFILE" install -d $MODPATH >&2

if ! grep -q '^SKIPUNZIP=1$' $MODPATH/install 2>/dev/null; then
  echo "- EXTRACTING MODULE FILES..."
  unzip -o "$ZIPFILE" -x 'META-INF/*' -d $MODPATH >&2

  # DEFAULT PERMISSION
  set_perm_recursive $MODPATH 0 0 0755 0644
fi

# LOAD CUSTOM INSTALLER
SKIPUNZIP=1
[ -f "$MODPATH/binary.tar.xz" ] && tar -xf $MODPATH/binary.tar.xz -C $MODPATH 2>/dev/null
chmod 0755 $MODPATH/install
PID=""
( $MODPATH/install )&
PID="$!"
wait $PID 2>/dev/null

if $BOOTMODE; then
  # UPDATE MAGISK INFO
  mktouch $NVBASE/modules/$MODID/update
  cp -af $MODPATH/module.prop $NVBASE/modules/$MODID/module.prop
elif ! $BOOTMODE; then
  echo "- ONLY UNINSTALL IS SUPPORTED IN RECOVERY"
  echo " "
  echo "- UNINSTALLING..."
  touch $MODPATH/remove
  [ -s $INFO ] && install_script $MODPATH/uninstall.sh || $BB rm -f $INFO $MODPATH/uninstall.sh
  recovery_cleanup
  cleanup
  $BB rm -rf $NVBASE/modules_update/$MODID $TMPDIR 2>/dev/null
  echo "  DONE"
  exit 0
fi

# REMOVE STUFFS
rm -rf \
$MODPATH/LICENSE $MODPATH/install \
$MODPATH/README.md $MODPATH/.git* \
$MODPATH/binary* $MODPATH/keycheck 2>/dev/null

# FINALIZING
cd /
$BOOTMODE || recovery_cleanup
rm -rf $TMPDIR

exit 0
 